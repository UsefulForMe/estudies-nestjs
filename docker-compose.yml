version: '3.5'
services:
  estudies_app:
    build: .
    container_name: estudies_app
    env_file: .env
    ports:
      - '${HTTP_SERVER_PORT}:${HTTP_SERVER_PORT}'
    restart: always
    networks:
      - estudies_network
    depends_on:
      - estudies_mongo
      - estudies_redis

  estudies_mongo:
    image: mongo:latest
    container_name: estudies_mongo
    env_file: .env
    environment:
      - PUID=1000
      - PGID=1000
    ports:
      - ${MONGO_PORT}:27017
    restart: always
    networks:
      - estudies_network
    volumes:
      - mongo_data:${MONGO_DATA}
      - ./:/opt/keyfile/
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'${MONGO_REPLICA_SET_NAME}',members:[{_id:0, host:'${MONGO_HOST}:${MONGO_PORT}'}]}).ok || rs.status().ok" | mongosh -u ${MONGO_INITDB_ROOT_USERNAME} -p ${MONGO_INITDB_ROOT_PASSWORD} --quiet) -eq 1
      interval: 10s
      start_period: 30s
    command: '--bind_ip_all --keyFile /opt/keyfile/keyfile --replSet ${MONGO_REPLICA_SET_NAME}'

  estudies_redis:
    image: redis:latest
    container_name: estudies_redis
    env_file: .env
    command: >
      --requirepass ${REDIS_PASSWORD}
    ports:
      - '${REDIS_PORT}:6379'
    restart: always
    networks:
      - estudies_network

networks:
  estudies_network:

volumes:
  mongo_data:
